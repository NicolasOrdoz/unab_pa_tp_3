# -*- coding: utf-8 -*-
"""Copia de Unab Programacion Avanzada.

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZvDP3XP9rL0Uy87GuhigVVHP1m7RiJUi

### **EJERCICIO 2**

Crear la clase Punto con dos atributos x e y (ambos numéricos), con el correspondiente constructor que recibe ambos valores. Definir métodos tales como: eje_x eje_y impresion (método que devuelve en representación de string ambos valores) opuesto (método que devuelve el punto opuesto -es decir con los atributos negativos) Cualquier otro método que considere importante
"""

class Punto:
    def __init__(self, x, y):
        self.x = x
        self.y = y

    def eje_x(self):
        return self.y == 0

    def eje_y(self):
        return self.x == 0

    def impresion(self):
        return f"({self.x}, {self.y})"

    def opuesto(self):
        return Punto(-self.x, -self.y)

    def distancia_al_origen(self):
        return (self.x**2 + self.y**2) ** 0.5

    def mover(self, dx, dy):
        self.x += dx
        self.y += dy

    def __eq__(self, otro):
        return self.x == otro.x and self.y == otro.y

p1 = Punto(3, -4)
print(p1.impresion())
print(p1.eje_x())
print(p1.eje_y())
print(p1.opuesto().impresion())
print(p1.distancia_al_origen())

p1.mover(2, 3)
print(p1.impresion())

"""# EJERCICIO **3**

Define una clase Línea con dos atributos: _punto_a y _punto_b. Son dos puntos por los que pasa la línea en un espacio de dos dimensiones.
La clase dispondrá de los siguientes métodos: Linea(Punto, Punto) Constructor que recibe como parámetros dos objetos de la clase Punto, que son utilizados para inicializar los atributos. mueve_derecha(float) Desplaza la línea a la derecha la distancia que se indique. mueve_izquierda(float) Desplaza la línea a la izquierda la distancia que se indique. mueve_arriba(float) Desplaza la línea hacia arriba la distancia que se indique. mueve_abajo(float) Desplaza la línea hacia abajo la distancia que se indique.
"""

class Linea:
    def __init__(self, punto_a, punto_b):
        self._punto_a = punto_a
        self._punto_b = punto_b

    def mueve_derecha(self, distancia):
        self._punto_a.mover(distancia, 0)
        self._punto_b.mover(distancia, 0)

    def mueve_izquierda(self, distancia):
        self._punto_a.mover(-distancia, 0)
        self._punto_b.mover(-distancia, 0)

    def mueve_arriba(self, distancia):
        self._punto_a.mover(0, distancia)
        self._punto_b.mover(0, distancia)

    def mueve_abajo(self, distancia):
        self._punto_a.mover(0, -distancia)
        self._punto_b.mover(0, -distancia)

    def impresion(self):
        return f"Línea desde {self._punto_a.impresion()} hasta {self._punto_b.impresion()}"

p1 = Punto(0, 0)
p2 = Punto(2, 2)

linea = Linea(p1, p2)
print(linea.impresion())

linea.mueve_derecha(3)
print(linea.impresion())

linea.mueve_arriba(1)
print(linea.impresion())

linea.mueve_izquierda(2)
print(linea.impresion())

linea.mueve_abajo(4)
print(linea.impresion())

"""# **EJERCICIO 4**

Desarrolla una clase Cancion con los siguientes atributos:
● titulo: una variable String que guarda el título de la canción.
● autor: una variable String que guarda el autor de la canción.
Con los siguientes métodos:
● Cancion(String, String): constructor que recibe como parámetros el título y el autor de la
canción (por este orden).
● get_titulo(): devuelve el título de la canción.
● get_autor(): devuelve el autor de la canción.
● set_titulo(String): establece el título de la canción.
● set_autor(String): establece el autor de la canción
"""

class Cancion:
    def __init__(self, titulo, autor):
        self._titulo = titulo
        self._autor = autor

    def get_titulo(self):
        return self._titulo

    def get_autor(self):
        return self._autor

    def set_titulo(self, nuevo_titulo):
        self._titulo = nuevo_titulo

    def set_autor(self, nuevo_autor):
        self._autor = nuevo_autor

    def impresion(self):
        return f"Título: '{self._titulo}', Autor: {self._autor}"

c1 = Cancion("JI JI JI", "Indio Solari")

print("Título:", c1.get_titulo())
print("Autor:", c1.get_autor())

c1.set_titulo("JI JI JI")
c1.set_autor("Indio Solari")

print(c1.impresion())

"""# **EJERCICIO 5**

● Crea una clase Libro que modele la información que se mantiene en una biblioteca sobre
cada libro: título, autor (usa la clase Persona), ISBN, páginas, edición, editorial , lugar
(ciudad y país) y fecha de edición (como texto). La clase debe proporcionar los siguientes
servicios: getters y setters, método para leer la información y método para mostrar la
información.
● Este último método mostrará la información del libro con este formato:
Título: Introduction to Java Programming 3a. edición
Autor: Liang, Y. Daniel
ISBN: 0-13-031997-X
Prentice-Hall, New Jersey (USA)
viernes 16 de noviembre de 2001
784 páginas
"""

class Libro:
    def __init__(self, titulo, autor, isbn, paginas, edicion, editorial, ciudad, pais, fecha_edicion):
        self._titulo = titulo
        self._autor = autor
        self._isbn = isbn
        self._paginas = paginas
        self._edicion = edicion
        self._editorial = editorial
        self._ciudad = ciudad
        self._pais = pais
        self._fecha_edicion = fecha_edicion

    # Getters
    def get_titulo(self): return self._titulo
    def get_autor(self): return self._autor
    def get_isbn(self): return self._isbn
    def get_paginas(self): return self._paginas
    def get_edicion(self): return self._edicion
    def get_editorial(self): return self._editorial
    def get_ciudad(self): return self._ciudad
    def get_pais(self): return self._pais
    def get_fecha_edicion(self): return self._fecha_edicion

    # Setters
    def set_titulo(self, titulo): self._titulo = titulo
    def set_autor(self, autor): self._autor = autor
    def set_isbn(self, isbn): self._isbn = isbn
    def set_paginas(self, paginas): self._paginas = paginas
    def set_edicion(self, edicion): self._edicion = edicion
    def set_editorial(self, editorial): self._editorial = editorial
    def set_ciudad(self, ciudad): self._ciudad = ciudad
    def set_pais(self, pais): self._pais = pais
    def set_fecha_edicion(self, fecha): self._fecha_edicion = fecha

    def leer_informacion(self):
        self._titulo = input("Título: ")
        self._autor = Persona(input("Nombre del autor: "), input("Apellido del autor: "))
        self._isbn = input("ISBN: ")
        self._paginas = int(input("Número de páginas: "))
        self._edicion = input("Edición: ")
        self._editorial = input("Editorial: ")
        self._ciudad = input("Ciudad: ")
        self._pais = input("País: ")
        self._fecha_edicion = input("Fecha de edición: ")

    def mostrar_informacion(self):
        print(f"Título: {self._titulo} {self._edicion} edición")
        print(f"Autor: {self._autor.impresion()}")
        print(f"ISBN: {self._isbn}")
        print(f"{self._editorial}, {self._ciudad} ({self._pais})")
        print(f"{self._fecha_edicion}")
        print(f"{self._paginas} páginas")

autor = Persona("Y. Daniel", "Liang")
libro = Libro(
    "Introduction to Java Programming", autor,
    "0-13-031997-X", 784, "3a.", "Prentice-Hall",
    "New Jersey", "USA", "viernes 16 de noviembre de 2001"
)

libro.mostrar_informacion()

"""Disculpe la demora, Aqui dejo mi trabajo, gracias por corregirlo nos vemos el proximo sabado en la siguiente clase. que tenga buen dia! Mi contacto: nicolasordoz7@gmail.com 46744570 Nicolas Ordoz"""